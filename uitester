#!/usr/bin/env python
from selenium import webdriver
from colorama import init, Fore, Back, Style
import argparse, importlib, traceback


def show_success(test, browser):
    print(Fore.GREEN+Style.BRIGHT+'%s SUCCESS :' %test['name'] + Style.RESET_ALL+' %s  in %s !' %(test['desc'], browser.name))
    print(Style.RESET_ALL)

def show_failure(test, browser, debuginf):
    print(Fore.WHITE+Back.RED+Style.BRIGHT+'%s FAILURE :'%test['name'] + Style.RESET_ALL+' %s  in %s !' %(test['desc'], browser.name))
    print('DEBUG INFO:\n'+Back.WHITE+Fore.BLACK+debuginf)
    print(Style.RESET_ALL)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Front-end UI tester\n\nUsage: uitester --chrome --firefox testfile')
    parser.add_argument('--chrome', action='store_true', help='test in Chrome')
    parser.add_argument('--firefox', action='store_true', help='test in Firefox')
    parser.add_argument('--single', help='Name of the single test to make (if not present, performs all)')
    parser.add_argument('testfile', action='store', help='Test serie (python file in folder tests)')
    ARGS = parser.parse_args()


    browsers=[]

    ts = importlib.import_module('tests.%s' %ARGS.testfile)

    if ARGS.chrome:        
        browsers.append(webdriver.Chrome())

    if ARGS.firefox:
        browsers.append(webdriver.Firefox())

    if ARGS.single:
        tests = list(filter(lambda t: t['name']==ARGS.single, ts.test_serie))
    else:
        tests = ts.test_serie

    for browser in browsers:
        for test in tests:
            try:
                browser.get(test['url'])
                for todo in test['todos']:
                    todo['function'](browser, *todo['args'])     
                if callable(test['check']):
                    if test['check'](browser):
                        show_success(test, browser)
                    else:
                        show_failure(test, browser, test['debuginfo'](browser))
            except Exception as e:
                print('\n======> ERROR in your test file (%s)  <======\n\n %s' %(ARGS.testfile,traceback.format_exc()))

        browser.close()
